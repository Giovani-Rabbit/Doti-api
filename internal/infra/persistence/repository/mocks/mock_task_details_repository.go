// Code generated by MockGen. DO NOT EDIT.
// Source: task_details_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTaskDetailsRepository is a mock of TaskDetailsRepository interface.
type MockTaskDetailsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTaskDetailsRepositoryMockRecorder
}

// MockTaskDetailsRepositoryMockRecorder is the mock recorder for MockTaskDetailsRepository.
type MockTaskDetailsRepositoryMockRecorder struct {
	mock *MockTaskDetailsRepository
}

// NewMockTaskDetailsRepository creates a new mock instance.
func NewMockTaskDetailsRepository(ctrl *gomock.Controller) *MockTaskDetailsRepository {
	mock := &MockTaskDetailsRepository{ctrl: ctrl}
	mock.recorder = &MockTaskDetailsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskDetailsRepository) EXPECT() *MockTaskDetailsRepositoryMockRecorder {
	return m.recorder
}

// UpdateDescription mocks base method.
func (m *MockTaskDetailsRepository) UpdateDescription(ctx context.Context, taskId int32, description string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDescription", ctx, taskId, description)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDescription indicates an expected call of UpdateDescription.
func (mr *MockTaskDetailsRepositoryMockRecorder) UpdateDescription(ctx, taskId, description interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDescription", reflect.TypeOf((*MockTaskDetailsRepository)(nil).UpdateDescription), ctx, taskId, description)
}

// UpdatePomodoroTarget mocks base method.
func (m *MockTaskDetailsRepository) UpdatePomodoroTarget(ctx context.Context, taskId int32, target int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePomodoroTarget", ctx, taskId, target)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePomodoroTarget indicates an expected call of UpdatePomodoroTarget.
func (mr *MockTaskDetailsRepositoryMockRecorder) UpdatePomodoroTarget(ctx, taskId, target interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePomodoroTarget", reflect.TypeOf((*MockTaskDetailsRepository)(nil).UpdatePomodoroTarget), ctx, taskId, target)
}
